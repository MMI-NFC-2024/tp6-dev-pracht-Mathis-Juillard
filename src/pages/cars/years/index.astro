---
import Layout from "../../../layouts/Layout.astro";
import cars from "../../../assets/cars.json";

const years = [...new Set(cars.map((c) => String(c.year)))].sort();

const counts = Object.fromEntries(
  years.map((y) => [y, cars.filter((c) => String(c.year) === y).length])
);
---

<Layout title="Voitures — par année">
  <section class="mx-auto max-w-6xl px-6 py-10">
    <header class="mb-8 flex flex-col gap-4 sm:flex-row sm:items-end sm:justify-between">
      <div>
        <p class="text-xs uppercase tracking-widest text-slate-400">Cars</p>
        <h1 class="text-3xl font-bold text-white">Voitures — par année</h1>
        <p class="mt-1 text-slate-400">
          Choisissez une année pour afficher le nuage de points <em>Puissance ↔︎ Poids</em>.
        </p>
      </div>

      <div class="shrink-0">
        <label for="jump" class="mr-2 text-sm text-slate-400">Aller à</label>
        <select
          id="jump"
          class="rounded-lg border border-slate-600 bg-slate-900/60 px-3 py-2 text-sm text-slate-100 focus:border-amber-400 focus:outline-none"
        >
          <option value="">Sélectionner…</option>
          {years.map((y) => (
            <option value={`/cars/years/${y}`}>{y}</option>
          ))}
        </select>
      </div>
    </header>

    <ul class="grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
      {years.map((y) => (
        <li>
          <a
            href={`/cars/years/${y}`}
            class="group block rounded-xl border border-slate-700/60 bg-gradient-to-br from-slate-800/60 to-slate-900/60 p-5 shadow-sm transition hover:border-amber-400/60 hover:shadow hover:shadow-amber-400/20 focus:outline-none focus:ring-2 focus:ring-amber-400"
          >
            <div class="flex items-center justify-between">
              <span class="text-sm font-medium text-slate-400">Année</span>
              <span
                class="rounded-full bg-slate-700/70 px-2 py-0.5 text-xs text-slate-300 transition group-hover:bg-amber-500/20 group-hover:text-amber-300"
              >
                {counts[y]} modèle{counts[y] > 1 ? "s" : ""}
              </span>
            </div>

            <div class="mt-1 text-2xl font-semibold tracking-wide text-white transition group-hover:text-amber-300">
              {y}
            </div>

            <div
              class="mt-3 inline-flex items-center gap-2 text-amber-300 opacity-0 transition group-hover:opacity-100"
            >
              <!-- petite flèche -->
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                <path d="M5 12h14M13 5l7 7-7 7" stroke="currentColor" stroke-width="1.7" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <span class="text-sm">Voir le nuage de points</span>
            </div>
          </a>
        </li>
      ))}
    </ul>
  </section>

  <script>
    const jump = document.getElementById("jump");
    jump?.addEventListener("change", (e) => {
      const v = /** @type {HTMLSelectElement} */ (e.target).value;
      if (v) location.href = v;
    });
  </script>
</Layout>
