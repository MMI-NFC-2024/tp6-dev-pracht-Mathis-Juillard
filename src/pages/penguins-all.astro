---
import Layout from "../layouts/Layout.astro";
import PlotFigure from "../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";
import penguinsRaw from "../assets/penguins.json";

const tidy = (rows) =>
  rows
    .filter(d => d.culmen_length_mm != null && d.culmen_depth_mm != null)
    .map(d => ({
      ...d,
      culmen_length_mm: +d.culmen_length_mm,
      culmen_depth_mm: +d.culmen_depth_mm
    }));

const makeOptions = (rows, title) => ({
  width: 920,
  height: 520,
  inset: 8,
  marks: [
    Plot.dot(rows, {
      x: "culmen_length_mm",
      y: "culmen_depth_mm",
      stroke: "species",
      fill: "species",
      r: 3.6,
      tip: true
    })
  ],
  x: { label: "Culmen length (mm)", grid: true },
  y: { label: "Culmen depth (mm)", grid: true },
  color: { legend: true },
  caption: title
});

const data = tidy(penguinsRaw);
const species = [...new Set(data.map(d => d.species))];
const charts = species.map(s => ({
  s,
  options: makeOptions(data.filter(d => d.species === s), `${s} — Scatterplot`)
}));
---

<Layout title="TP6 — Penguins (toutes les espèces)">
  <div class="mb-6">
    <div class="kicker">Penguins</div>
    <h1 class="page-title">Toutes les espèces</h1>
    <p class="text-slate-400">Une section par espèce, avec couleurs cohérentes.</p>
  </div>

  <nav class="mb-6 flex flex-wrap gap-2">
    {species.map(s => <a href={`#${s}`} class="nav-pill">{s}</a>)}
  </nav>

  <div class="grid gap-8">
    {charts.map(({s, options}) => (
      <section id={s} class="card p-5">
        <div class="mb-3 flex items-center justify-between">
          <h2 class="text-xl font-semibold">{s}</h2>
          <a href="#top" class="text-xs text-slate-400 hover:text-white">↑ haut</a>
        </div>
        <div class="overflow-x-auto rounded-xl border border-white/10 bg-slate-900/30 p-3">
          <PlotFigure options={options} />
        </div>
      </section>
    ))}
  </div>
</Layout>
